gluePath ?= "$GLUE"
targetFileName ?= "glue.zip"
includePath ?= true

# Get all the dependencies that we are currently using to run this glue instance
dependencies = unique(split("(:|;)", environment("java.class.path")))

# The headers for bash & bat file
bash = array("\#!/bin/bash")
cygwin = array("\#!/bin/bash")
bat = array("@echo off")

# The path might contain an environment variable, fix it for bat
batGluePath = replace("\\$([\\w]+)", "%$1%", gluePath)

# Create an array of all the files that should be added
for (dependency : dependencies)
	if (dependency != null && dependency != "")
		# Get the filename of the dependency
		fileName = first(find(".*/(.*)", dependency))
		# Add it to the list of files but prefix with "lib"
		files = array(files, "lib/" + fileName + "=" + dependency)
		# Update the bash/bat files to update the classpath
		switch($index)
			case (0)
				bash = array(bash, "export CLASSPATH=" + gluePath + "/lib/" + fileName)
				cygwin = array(cygwin, "export CLASSPATH=" + gluePath + "/lib/" + fileName)
				bat = array(bat, "set CLASSPATH=" + batGluePath + "/lib/" + fileName)
			default
				bash = array(bash, "export CLASSPATH=$CLASSPATH:" + gluePath + "/lib/" + fileName)
				cygwin = array(cygwin, "export CLASSPATH=$CLASSPATH\";\"" + gluePath + "/lib/" + fileName)
				bat = array(bat, "set CLASSPATH=%CLASSPATH%;" + batGluePath + "/lib/" + fileName)

# Include the current runtime parameters (if any)
if (environment("label") != null)
	commands = array(commands, "label=" + environment("label"))
if (environment("environment") != null)
	commands = array(commands, "environment=" + environment("environment"))
if (environment("charset") != null)
	commands = array(commands, "charset=" + environment("charset"))
if (environment("path") != null && includePath == true)
	commands = array(commands, "charset=" + environment("path"))

# Add the actual java command to the bash/bat files
gbash = array(bash, join(" ", array("java -cp $CLASSPATH be.nabu.glue.Main", commands, "\"$@\"")))
gcygwin = array(cygwin, join(" ", array("java -cp $CLASSPATH be.nabu.glue.Main", commands, "\"$@\"")))
gbat = array(bat, join(" ", array("java -cp " + gluePath + "/lib/*.jar be.nabu.glue.Main", commands, "%*")))

tbash = array(bash, join(" ", array("java -cp $CLASSPATH be.nabu.glue.Runner", commands, "\"$@\"")))
tcygwin = array(cygwin, join(" ", array("java -cp $CLASSPATH be.nabu.glue.Runner", commands, "\"$@\"")))
tbat = array(bat, join(" ", array("java -cp " + gluePath + "/lib/*.jar be.nabu.glue.Runner", commands, "%*")))

sbash = array(bash, join(" ", array("java -cp $CLASSPATH be.nabu.glue.Shell", commands, "\"$@\"")))
scygwin = array(cygwin, join(" ", array("java -cp $CLASSPATH be.nabu.glue.Shell", commands, "\"$@\"")))
sbat = array(bat, join(" ", array("java -cp " + gluePath + "/lib/*.jar be.nabu.glue.Shell", commands, "%*")))

# Check if there is a configuration file for glue
switch
	case (exists(environment("user.dir") + "/.glue"))
		configuration = environment("user.dir") + "/.glue"
	case (exists(environment("user.home") + "/.glue"))
		configuration = environment("user.home") + "/.glue"

files = array(files, configuration, 
	"glue.sh=" + join("\n", gbash), "glue.bat=" + join("\r\n", gbat), "glue.cyg=" + join("\n", gcygwin), 
	"gluet.sh=" + join("\n", tbash), "gluet.bat=" + join("\r\n", tbat), "gluet.cyg=" + join("\n", tcygwin), 
	"glues.sh=" + join("\n", sbash), "glues.bat=" + join("\r\n", sbat), "glues.cyg=" + join("\n", scygwin))

# Check if you have the ide in the dependencies, if so package a runner for that
if (size(find("glue-ide", dependencies)) > 0)
	ebash = array(bash, "java -cp $CLASSPATH -Denvironment=local -DtextOnly=true be.nabu.glue.ide.Main file:$GLUESCRIPTS")
	ecygwin = array(cygwin, "java -cp $CLASSPATH -Denvironment=local -DtextOnly=true be.nabu.glue.ide.Main file:$GLUESCRIPTS")
	ebat = array("java -version:1.8 -cp " + batGluePath + "/lib/* -Denvironment=local -DtextOnly=true be.nabu.glue.ide.Main file:%GLUESCRIPTS%")
	files = array(files,
		"gluecide.sh=" + join("\n", ebash),
		"gluecide.cyg=" + join("\n", ecygwin),
		"gluecide.bat=" + join("\r\n", ebat))

files = array(files, "readme.txt=" + join("\n", "packaged = " + format(now(), "yyyy/MM/dd HH:mm:ss"), "by = " + environment("user.name")))

# Create the zip
zip = zip(files)

# Write it to the given filename
write(targetFileName, zip)
