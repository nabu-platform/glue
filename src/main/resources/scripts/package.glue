gluePath ?= "$GLUE"
targetFileName ?= "glue.zip"
includePath ?= true

# Get all the dependencies that we are currently using to run this glue instance
dependencies = unique(split("(:|;)", environment("java.class.path")))

# The headers for bash & bat file
bash = array("\#!/bin/bash")
cygwin = array("\#!/bin/bash")
bat = array("@echo off")

# The path might contain an environment variable, fix it for bat
batGluePath = replace("\\$([\\w]+)", "%$1%", gluePath)

# Create an array of all the files that should be added
for (dependency : dependencies)
	# Get the filename of the dependency
	fileName = first(find(".*/(.*)", dependency))
	# Add it to the list of files but prefix with "lib"
	files = array(files, "lib/" + fileName + "=" + dependency)
	# Update the bash/bat files to update the classpath
	switch($index)
		case (0)
			bash = array(bash, "export CLASSPATH=" + gluePath + "/lib/" + fileName)
			cygwin = array(cygwin, "export CLASSPATH=" + gluePath + "/lib/" + fileName)
			bat = array(bat, "set CLASSPATH=" + batGluePath + "/lib/" + fileName)
		default
			bash = array(bash, "export CLASSPATH=$CLASSPATH:" + gluePath + "/lib/" + fileName)
			cygwin = array(cygwin, "export CLASSPATH=$CLASSPATH\";\"" + gluePath + "/lib/" + fileName)
			bat = array(bat, "set CLASSPATH=%CLASSPATH%;" + batGluePath + "/lib/" + fileName)

# Include the current runtime parameters (if any)
if (environment("label") != null)
	commands = array(commands, "label=" + environment("label"))
if (environment("environment") != null)
	commands = array(commands, "environment=" + environment("environment"))
if (environment("charset") != null)
	commands = array(commands, "charset=" + environment("charset"))
if (environment("path") != null && includePath == true)
	commands = array(commands, "charset=" + environment("path"))

# Add the actual java command to the bash/bat files
gbash = array(bash, "java -cp $CLASSPATH be.nabu.glue.Main " + join(" ", commands) + " \"$@\"")
gcygwin = array(cygwin, "java -cp $CLASSPATH be.nabu.glue.Main " + join(" ", commands) + " \"$@\"")
gbat = array(bat, "java -cp %CLASSPATH% be.nabu.glue.Main " + join(" ", commands) + " %*")

tbash = array(bash, "java -cp $CLASSPATH be.nabu.glue.Runner " + join(" ", commands) + " \"$@\"")
tcygwin = array(cygwin, "java -cp $CLASSPATH be.nabu.glue.Runner " + join(" ", commands) + " \"$@\"")
tbat = array(bat, "java -cp %CLASSPATH% be.nabu.glue.Runner " + join(" ", commands) + " %*")

sbash = array(bash, "java -cp $CLASSPATH be.nabu.glue.Shell " + join(" ", commands) + " \"$@\"")
scygwin = array(cygwin, "java -cp $CLASSPATH be.nabu.glue.Shell " + join(" ", commands) + " \"$@\"")
sbat = array(bat, "java -cp %CLASSPATH% be.nabu.glue.Shell " + join(" ", commands) + " %*")

# Check if there is a configuration file for glue
switch
	case (exists(environment("user.dir") + "/.glue"))
		configuration = environment("user.dir") + "/.glue"
	case (exists(environment("user.home") + "/.glue"))
		configuration = environment("user.home") + "/.glue"

# Create the zip
zip = zip(array(files, configuration, "glue.sh=" + join("\n", gbash), "glue.bat=" + join("\r\n", gbat), "glue.cyg=" + join("\n", gcygwin), "gluet.sh=" + join("\n", tbash), "gluet.bat=" + join("\r\n", tbat), "gluet.cyg=" + join("\n", tcygwin), "glues.sh=" + join("\n", sbash), "glues.bat=" + join("\r\n", sbat), "glues.cyg=" + join("\n", scygwin)))

# Write it to the given filename
write(targetFileName, zip)
